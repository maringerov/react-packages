{"version":3,"sources":["player.jsx"],"names":[],"mappings":"YAAA,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC7B,WAAS,EAAE;AACT,oBAAgB,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AACxC,WAAO,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU;GAC1C;;AAED,mBAAiB,YAAC,EAAE,EAAE;AACpB,WAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;GACnC;;AAED,QAAM,cAAG;;;AACP,WACC;;QAAI,SAAS,EAAC,aAAa;MAEvB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAK;AACjC,eACE,oBAAC,UAAU;AACT,aAAG,EAAG,MAAM,CAAC,GAAK;AAClB,0BAAgB,EAAG,MAAK,KAAK,CAAC,gBAAkB;AAChD,2BAAiB,EAAG,MAAK,iBAAmB;AAC5C,gBAAM,EAAE,MAAO,GAAG,CACpB;OACH,CAAC;KAED,CACJ;GACH;CACF,CAAC,CAAC;;AAGH,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC7B,aAAW,cAAG;AACZ,QAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;AACrC,QAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;GACxC;;AAED,cAAY,cAAG;AACb,QAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;AAC7C,QAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;AACrC,WAAQ,UAAU,KAAK,QAAQ,GAAI,iBAAiB,GAAG,QAAQ,CAAC;GACjE;;AAED,QAAM,cAAG;AACP,QAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;;AAE/B,WACE;;QAAI,SAAS,EAAG,IAAI,CAAC,YAAY,EAAI,EAAC,OAAO,EAAG,IAAI,CAAC,WAAa;MAChE;;UAAM,SAAS,EAAC,MAAM;QAAG,MAAM,CAAC,IAAI;OAAS;MAC7C;;UAAM,SAAS,EAAC,OAAO;QAAG,MAAM,CAAC,KAAK;OAAS;KAC5C,CACL;GACH;CACF,CAAC,C","file":"/player.jsx.js","sourcesContent":["PlayerList = React.createClass({\n  propTypes: {\n    selectedPlayerId: React.PropTypes.string,\n    players: React.PropTypes.array.isRequired\n  },\n\n  setSelectedPlayer(id) {\n    Session.set(\"selectedPlayer\", id);\n  },\n\n  render() {\n    return (\n     <ul className=\"leaderboard\">\n       {\n         this.props.players.map((player) => {\n           return (\n             <PlayerItem\n               key={ player._id }\n               selectedPlayerId={ this.props.selectedPlayerId }\n               setSelectedPlayer={ this.setSelectedPlayer }\n               player={player} />\n           );\n         })\n       }\n     </ul>\n    );\n  }\n});\n\n\nPlayerItem = React.createClass({\n  handleClick() {\n    var playerId = this.props.player._id;\n    this.props.setSelectedPlayer(playerId);\n  },\n\n  getClassName() {\n    var selectedId = this.props.selectedPlayerId;\n    var playerId = this.props.player._id;\n    return (selectedId === playerId) ? 'player selected' : 'player';\n  },\n\n  render() {\n    var player = this.props.player;\n\n    return (\n      <li className={ this.getClassName() } onClick={ this.handleClick }>\n        <span className=\"name\">{ player.name }</span>\n        <span className=\"score\">{ player.score }</span>\n      </li>\n    );\n  }\n});\n"]}