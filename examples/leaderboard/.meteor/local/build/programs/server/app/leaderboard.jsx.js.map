{"version":3,"sources":["leaderboard.jsx"],"names":[],"mappings":";;;AAGA,OAAO,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;;AAE1C,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,UAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;AAC3B,WAAO,cAAG;AACR,aAAO,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;KAC3D;AACD,gBAAY,cAAG;AACb,UAAI,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC5D,aAAO,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC;KAC9B;AACD,oBAAgB,cAAG;AACjB,aAAO,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;KACtC;AACD,cAAU,cAAG;AACX,aAAO,UAAU,CAAC;KACnB;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,WAAW,CAAC,MAAM,CAAC;AAC1B,gBAAY,cAAG;AACb,aAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC;KACnE;GACF,CAAC,CAAC;CACJ;;;AAGD,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,QAAM,CAAC,OAAO,CAAC,YAAY;AACzB,QAAI,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;AAChC,UAAI,KAAK,GAAG,CAAC,cAAc,EAAE,cAAc,EAAE,aAAa,EAC7C,sBAAsB,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;AACvE,OAAC,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,IAAI,EAAE;AAC5B,eAAO,CAAC,MAAM,CAAC;AACb,cAAI,EAAE,IAAI;AACV,eAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;SAC9C,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ;GACF,CAAC,CAAC","file":"/leaderboard.jsx.js","sourcesContent":["// Set up a collection to contain player information. On the server,\n// it is backed by a MongoDB collection named \"players\".\n\nPlayers = new Mongo.Collection(\"players\");\n\nif (Meteor.isClient) {\n  Template.leaderboard.helpers({\n    players() {\n      return Players.find({}, { sort: { score: -1, name: 1 } });\n    },\n    selectedName() {\n      var player = Players.findOne(Session.get(\"selectedPlayer\"));\n      return player && player.name;\n    },\n    selectedPlayerId() {\n      return Session.get(\"selectedPlayer\");\n    },\n    PlayerList() {\n      return PlayerList;\n    }\n  });\n\n  Template.leaderboard.events({\n    'click .inc'() {\n      Players.update(Session.get(\"selectedPlayer\"), {$inc: {score: 5}});\n    }\n  });\n}\n\n// On server startup, create some players if the database is empty.\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    if (Players.find().count() === 0) {\n      var names = [\"Ada Lovelace\", \"Grace Hopper\", \"Marie Curie\",\n                   \"Carl Friedrich Gauss\", \"Nikola Tesla\", \"Claude Shannon\"];\n      _.each(names, function (name) {\n        Players.insert({\n          name: name,\n          score: Math.floor(Random.fraction() * 10) * 5\n        });\n      });\n    }\n  });\n}\n"]}